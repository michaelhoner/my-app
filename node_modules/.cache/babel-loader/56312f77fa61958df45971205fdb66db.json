{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\GitHub\\\\my-app-rooster\\\\src\\\\App.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch'; // Like https://github.com/brunobertolini/styled-by\n\nvar styledBy = function styledBy(property, mapping) {\n  return function (props) {\n    return mapping[props[property]];\n  };\n};\n\nvar StyledButton = withStyles({\n  root: {\n    background: styledBy('color', {\n      default: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)'\n    }),\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: styledBy('color', {\n      default: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)'\n    })\n  }\n})(function (_ref) {\n  var classes = _ref.classes,\n      color = _ref.color,\n      other = _objectWithoutProperties(_ref, [\"classes\", \"color\"]);\n\n  return React.createElement(Button, Object.assign({\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n});\n\nvar DynamicCSS =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DynamicCSS, _React$Component);\n\n  function DynamicCSS() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DynamicCSS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DynamicCSS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      color: 'default'\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        color: event.target.checked ? 'blue' : 'default'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DynamicCSS, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.color === 'blue',\n          onChange: this.handleChange,\n          color: \"primary\",\n          value: \"dynamic-class-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        label: \"Blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(StyledButton, {\n        color: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Dynamic CSS\"));\n    }\n  }]);\n\n  return DynamicCSS;\n}(React.Component);\n\nexport default DynamicCSS;","map":{"version":3,"sources":["C:\\Users\\Michael\\GitHub\\my-app-rooster\\src\\App.js"],"names":["React","withStyles","Button","FormControlLabel","Switch","styledBy","property","mapping","props","StyledButton","root","background","default","blue","borderRadius","border","color","height","padding","boxShadow","classes","other","DynamicCSS","state","handleChange","event","setState","target","checked","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,KAAK;AAAA,WAAID,OAAO,CAACC,KAAK,CAACF,QAAD,CAAN,CAAX;AAAA,GAA5B;AAAA,CAAjB;;AAEA,IAAMG,YAAY,GAAGR,UAAU,CAAC;AAC9BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEN,QAAQ,CAAC,OAAD,EAAU;AAC5BO,MAAAA,OAAO,EAAE,kDADmB;AAE5BC,MAAAA,IAAI,EAAE;AAFsB,KAAV,CADhB;AAKJC,IAAAA,YAAY,EAAE,CALV;AAMJC,IAAAA,MAAM,EAAE,CANJ;AAOJC,IAAAA,KAAK,EAAE,OAPH;AAQJC,IAAAA,MAAM,EAAE,EARJ;AASJC,IAAAA,OAAO,EAAE,QATL;AAUJC,IAAAA,SAAS,EAAEd,QAAQ,CAAC,OAAD,EAAU;AAC3BO,MAAAA,OAAO,EAAE,uCADkB;AAE3BC,MAAAA,IAAI,EAAE;AAFqB,KAAV;AAVf;AADwB,CAAD,CAAV,CAgBlB;AAAA,MAAGO,OAAH,QAAGA,OAAH;AAAA,MAAYJ,KAAZ,QAAYA,KAAZ;AAAA,MAAsBK,KAAtB;;AAAA,SAAkC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,OAAO,CAACV;AAA3B,KAAqCW,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;AAAA,CAhBkB,CAArB;;IAkBMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNP,MAAAA,KAAK,EAAE;AADD,K;;UAIRQ,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAES,KAAK,CAACE,MAAN,CAAaC,OAAb,GAAuB,MAAvB,GAAgC;AAAzC,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWP,KAAX,KAAqB,MADhC;AAEE,UAAA,QAAQ,EAAE,KAAKQ,YAFjB;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,KAAK,EAAC,oBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AASE,QAAA,KAAK,EAAC,MATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWP,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,CADF;AAgBD;;;;EA1BsBhB,KAAK,CAAC6B,S;;AA6B/B,eAAeP,UAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n// Like https://github.com/brunobertolini/styled-by\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledButton = withStyles({\n  root: {\n    background: styledBy('color', {\n      default: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    }),\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: styledBy('color', {\n      default: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      blue: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    }),\n  },\n})(({ classes, color, ...other }) => <Button className={classes.root} {...other} />);\n\nclass DynamicCSS extends React.Component {\n  state = {\n    color: 'default',\n  };\n\n  handleChange = event => {\n    this.setState({ color: event.target.checked ? 'blue' : 'default' });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.color === 'blue'}\n              onChange={this.handleChange}\n              color=\"primary\"\n              value=\"dynamic-class-name\"\n            />\n          }\n          label=\"Blue\"\n        />\n        <StyledButton color={this.state.color}>Dynamic CSS</StyledButton>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DynamicCSS;\n"]},"metadata":{},"sourceType":"module"}